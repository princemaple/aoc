# AoC 2022 Day 4

```elixir
Mix.install([:kino])

defmodule Utils do
  def split(line, sep \\ "") do
    String.split(line, sep, trim: true)
  end

  def split_all_lines(text, sep \\ "") do
    text
    |> String.split("\n", trim: true)
    |> Enum.map(&split(&1, sep))
  end

  def to_numbers(number) when is_binary(number) do
    String.to_integer(number)
  end

  def to_numbers(numbers) when is_list(numbers) do
    Enum.map(numbers, &to_numbers/1)
  end

  def to_matrix(text, sep \\ "") do
    text
    |> split_all_lines(sep)
    |> then(fn data ->
      for {row, r} <- Enum.with_index(data), {col, c} <- Enum.with_index(row) do
        {{r, c}, col}
      end
    end)
    |> Map.new()
  end
end
```

## Setup

```elixir
import Utils
```

```elixir
input = Kino.Input.textarea("Input:")
```

```elixir
text = Kino.Input.read(input)
```

```elixir
data = split_all_lines(text, [",", "-"])
```

## P1

```elixir
for row <- data do
  [f1, t1, f2, t2] = Enum.map(row, &String.to_integer/1)
  (f1 <= f2 and t1 >= t2) or (f1 >= f2 and t1 <= t2)
end
|> Enum.count(& &1)
```

## P2

```elixir
for row <- data do
  [f1, t1, f2, t2] = Enum.map(row, &String.to_integer/1)
  r1 = f1..t1
  r2 = f2..t2
  !Range.disjoint?(r1, r2)
end
|> Enum.count(& &1)
```
